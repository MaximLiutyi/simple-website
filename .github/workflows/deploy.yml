name: Build, Push and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-website:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-website:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} "
            # Зупинка та видалення старого контейнера
            CONTAINER_ID=\$(sudo docker ps -q --filter 'name=my-website')
            if [ ! -z \"$CONTAINER_ID\" ]; then
              sudo docker stop my-website
              sudo docker rm my-website
            fi

            # Видалення старого образу
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/my-website:latest || true

            # Завантаження нового образу
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/my-website:latest

            # Запуск нового контейнера
            sudo docker run -d -p 8080:80 --name my-website ${{ secrets.DOCKER_USERNAME }}/my-website:latest
          "

